services:

  frontend:
    build:
      context:
        ./frontend
    ports:
      - "80:80"

  backend:
    build:
      context:
        ./backend_src
    volumes:
      - ./certs:/certs

    env_file: backend_src/.env
    environment:
      REDIS_HOST: nosqldb
      REDIS_PORT: ${REDIS_PORT}

      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
    depends_on:
      nosqldb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
  postgres:
    image: bitnami/postgresql:latest
    env_file: backend_src/.env
    environment:
      POSTGRESQL_USERNAME: ${DATABASE_USERNAME}
      POSTGRESQL_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRESQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - postgresql_data:/bitnami/postgresql
    ports:
      - "5432:5432"  # Проброс порта (опционально)
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nosqldb:
    image: redis:7.2.7
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

volumes:
  redis_data:
  postgresql_data:
    driver: local